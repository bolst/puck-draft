@inherits MudNavLink

<div @attributes="UserAttributes" class="@Classname" disabled="@Disabled" style="@Style">
    @{
        if (!OnClick.HasDelegate)
        {
            <NavLink @onclick="this.AsNonRenderingEventHandler(HandleNavigation)"
                     class="@_linkClassname"
                     @attributes="@Attributes"
                     tabindex="@TabIndex"
                     Match="@Match"
                     ActiveClass="@ActiveClass">
                @if (!string.IsNullOrEmpty(Icon))
                {
                    <MudIcon Disabled="@Disabled" Icon="@Icon" Color="@IconColor" Class="@IconClassname"/>
                }
                <div class="mud-nav-link-text d-flex justify-center ma-0">
                    @ChildContent
                </div>
            </NavLink>
        }
        else
        {
            <div @onclick="this.AsNonRenderingEventHandler<MouseEventArgs>(OnClickHandler)"
                 class="@_linkClassname"
                 tabindex="@TabIndex">
                @if (!string.IsNullOrEmpty(Icon))
                {
                    <MudIcon Disabled="@Disabled" Icon="@Icon" Color="@IconColor" Class="@IconClassname" />
                }
                <div class="mud-nav-link-text d-flex justify-center ma-0">
                    @ChildContent
                </div>
            </div>
        }
    }
</div>


@code {

    private string _linkClassname = string.Empty;

    protected override void OnParametersSet()
    {
        Style = "height: 80px; width: 100%;";
        _linkClassname = LinkClassname + " d-flex justify-center align-center flex-column";
        base.OnParametersSet();
    }

}